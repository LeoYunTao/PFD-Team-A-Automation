name: Main Test

on: 
  workflow_dispatch:
    inputs:
      browsers:
        required: true
        description: "Browsers (using comma seperated values)"
      testcases:
        required: true
        description: "Test cases (using comma seperated values)"
      emails:
        required: true
        description: "Emails (Using space seperated values)"
      os:
        required: true
        description: "Operating Systems (using comma seperated values)"
#   schedule:
#     - cron: '0 15 * * *'

defaults:
  run:
    working-directory: ./

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(github.event.inputs.os) }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install selenium
        python -m pip install webdriver-manager
        python -m pip install Faker
        python -m pip install pytest
        python -m pip install pytest-xdist
        python -m pip install pytest-csv
        python -m pip install pandas
        python -m pip install allure-pytest
    
    - name: Run main.py
      run: |
        python main.py --browsers ${{ github.event.inputs.browsers }} --testcases ${{ github.event.inputs.testcases }}
    
    - name: Upload allure results to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: allure-results
        path: allure-results/

    - name: Upload csv results to artifacts
      uses: actions/upload-artifact@v3
      with:
        name: csv-reports
        path: csv-reports/
  
  allure-upload:
    name: Generate Allure Report
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Download allure-results from build
        uses: actions/download-artifact@v3
        with:
          name: allure-results
          path: allure-results/
      
      - name: Install allure cli
        run: |
          npm install -g allure-commandline --save-dev
      
      - name: Generate Allure Report
        run: |
          allure generate allure-results/* --clean
      
      - name: Store Allure Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-report/
          
      - name: Deploy to Netlify        
        uses: jsmrcaga/action-netlify-deploy@v1.1.0
        with:
          NETLIFY_AUTH_TOKEN: r0_un4csR4RpFErHtHuNiq4yp5s_QNKBcV7a7G8QBhs
          NETLIFY_SITE_ID: c9893677-95b7-4d68-a900-c5722f343b80
          NETLIFY_DEPLOY_TO_PROD: true
          build_directory: allure-report/

  excel-report:
    name: Generate Excel Report
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas
          python -m pip install openpyxl

      - name: Download csv-reports from build
        uses: actions/download-artifact@v3
        with:
          name: csv-reports
          path: csv-reports/

      - name: Generate Excel Report
        run: |
          python excelResults.py

      - name: Store Excel Report
        uses: actions/upload-artifact@v3
        with:
          name: excel-report
          path: excel-report/

  send-email:
    name: Send Email Report
    needs: [allure-upload, excel-report]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Download excel-report
        uses: actions/download-artifact@v3
        with:
          name: excel-report
          path: excel-report/

      - name: Send Email
        run: |
          python email_report/send_email_report.py ${{ github.event.inputs.emails }}
